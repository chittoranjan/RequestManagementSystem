@using System.Globalization
@using Microsoft.ReportingServices.Interfaces
@model IEnumerable<RMS.App.ViewModels.RequisitionStatusViewModel>

@{
    Layout = null;
}

@if (TempData["msg"] != null)
{
    <div class="alert alert-success">
        @Html.Raw(TempData["msg"])
    </div>
}

<div style="margin-left: 15px;">
    @if (TempData["msg1"] != null)
    {
        <div class="alert alert-warning">
            @Html.Raw(TempData["msg1"])
        </div>
    }
</div>


    <p>
        @Html.ActionLink("Create New", "Create", null, htmlAttributes: new {@class = "btn btn-success"})
    </p>

    <table id="example1" class="table table-striped table-bordered table-hover dt-responsive nowrap" style="width: 100%">

        <thead>

        <tr class="bg-info">
            <th>
                SL
            </th>
            <th>
                Action
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Requisition.FromPlace)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Requisition.DestinationPlace)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Requisition.StartDateTime)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Requisition.EndDateTime)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.StatusType)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Requisition.SubmitDateTime)
            </th>

            <th>
                @Html.DisplayNameFor(model => model.Requisition.RequisitionType)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Requisition.RequestFor)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Requisition.Description)
            </th>
            <th>
                @Html.DisplayName("Requested Time ")
            </th>
        </tr>

        </thead>
        <tbody>
        @{
            var sl = 0;
            if (Model.Count() != 0)
            {
                foreach (var item in Model)
                {
                    sl++;
                    TimeSpan time = DateTime.Now - @item.Requisition.SubmitDateTime;
                    string formattedTime = string.Format(CultureInfo.CurrentCulture, "{0} days, {1} hours, {2} minutes, {3} seconds", time.Days, time.Hours, time.Minutes, time.Seconds);

                    <tr>
                        <td>
                            @sl

                        </td>
                        <td>
                            @if (item.StatusType == "New")
                            {
                                @Html.ActionLink("Edit", "Edit", new {id = item.RequisitionId}, new {@class = "btn btn-warning btn-sm"})<span> </span>
                            }

                            @Html.ActionLink("Details", "Details", new {id = item.Requisition.Id}, new {@class = "btn btn-success btn-sm"}) <span> </span>

                            @Html.ActionLink("Feedback", "Create","Feedback", new { requisitionId = item.RequisitionId}, new {@class = "btn btn-info btn-sm"})

                        </td>
                        <td>
                            @item.Requisition.FromPlace
                        </td>
                        <td>
                            @item.Requisition.DestinationPlace
                        </td>
                        <td>
                            @item.Requisition.StartDateTime.ToString("dd MMM yyyy hh:mm tt")
                        </td>
                        <td>
                            @item.Requisition.EndDateTime.ToString("dd MMM yyyy hh:mm tt")
                        </td>

                        @if (@item.StatusType == "New")
                        {
                            <td class="text-primary">@item.StatusType</td>
                        }
                        @if (@item.StatusType == "Cancelled")
                        {
                            <td class="text-danger">@item.StatusType</td>
                        }
                        @if (@item.StatusType == "Completed")
                        {
                            <td class="text-success">@item.StatusType</td>
                        }
                        @if (@item.StatusType == "OnExecute")
                        {
                            <td class="text-info">@item.StatusType</td>
                        }
                        @if (@item.StatusType == "Hold")
                        {
                            <td class="text-info">@item.StatusType</td>
                        }
                        <td>
                            @item.Requisition.SubmitDateTime.ToString("dd MMM yyyy hh:mm tt")
                        </td>

                        <td>
                            @item.Requisition.RequisitionType
                        </td>

                        <td>
                            @item.Requisition.RequestFor
                        </td>

                        <td>
                            @item.Requisition.Description
                        </td>

                        <td class="text-danger">
                            @formattedTime
                        </td>

                    </tr>
                }
            }
        }
        </tbody>
        <tfoot>
        <tr class="bg-secondary text-white">
            <th>
                SL
            </th>
            <th>
                Action
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Requisition.FromPlace)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Requisition.DestinationPlace)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Requisition.StartDateTime)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Requisition.EndDateTime)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.StatusType)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Requisition.SubmitDateTime)
            </th>

            <th>
                @Html.DisplayNameFor(model => model.Requisition.RequisitionType)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Requisition.RequestFor)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Requisition.Description)
            </th>
            <th>
                @Html.DisplayName("Requested Time ")
            </th>
        </tr>
        </tfoot>
    </table>

