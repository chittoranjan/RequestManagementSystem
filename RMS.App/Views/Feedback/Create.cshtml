@model RMS.App.ViewModels.FeedbackViewModel

@{
    ViewBag.Title = "Feedback";
    Layout = "~/Views/Shared/_LayoutLogIn.cshtml";
}

<h2>Feedback</h2>
<hr />
<div class="container border">
    <br />

    


    <div class="row">
        <div class="col-md-6">
            <div class="form-group row">
                @Html.Label("Name", htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.Requisition.Employee.FullName, new { htmlAttributes = new { @class = "form-control", @readOnly = "readonly" } })
                </div>
            </div>
            <div class="form-group row">
                @Html.Label("Requisition No", htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.Requisition.RequisitionNumber, new { htmlAttributes = new { @class = "form-control", @readOnly = "readonly" } })
                </div>
            </div>
            <div class="form-group row">
                @Html.Label("From Place", htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.Requisition.FromPlace, new { htmlAttributes = new { @class = "form-control", @readOnly = "readonly" } })
                </div>
            </div>
            <div class="form-group row">
                @Html.Label("Destination Place", htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.Requisition.DestinationPlace, new { htmlAttributes = new { @class = "form-control", @readOnly = "readonly" } })
                </div>
            </div>
            <div class="form-group row">
                @Html.Label("Passenger Qty", htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.Requisition.PassengerQty, new { htmlAttributes = new { @class = "form-control", @readOnly = "readonly" } })
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group row">
                @Html.Label("Journey Date", htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.Requisition.StartDateTime, new { htmlAttributes = new { @class = "form-control", @readOnly = "readonly" } })
                </div>
            </div>
            <div class="form-group row">
                @Html.Label("Return Date", htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.Requisition.EndDateTime, new { htmlAttributes = new { @class = "form-control", @readOnly = "readonly" } })
                </div>
            </div>
            <div class="form-group row">
                @Html.Label("Description", htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.Requisition.Description, new { htmlAttributes = new { @class = "form-control", @readOnly = "readonly" } })
                </div>
            </div>
            <div class="form-group row">
                @Html.Label("Request For", htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.Requisition.RequestFor, new { htmlAttributes = new { @class = "form-control", @readOnly = "readonly" } })
                </div>
            </div>
        </div>
    </div>

    <br />
</div>
<br />
<div class="container border">
    <br />
    <div class="row" style="margin: 10px 10px;">

        <div class="col-md-5">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                @Html.HiddenFor(model => model.Requisition.Id)
                @Html.HiddenFor(model => model.Requisition.EmployeeId)


                <div class="col-md-6">
                    @if (TempData["Msg"] != null)
                    {
                        <div>@ViewBag.Msg</div>
                    }
                </div>
                <div class="form-horizontal row">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.Id)

                    <div class="form-group row">
                        @Html.LabelFor(model => model.CommentText, htmlAttributes: new { @class = "control-label col-md-12" })
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.CommentText, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.CommentText, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <input type="submit" value="Post" class="btn btn-success" /> &nbsp;
                    @Html.ActionLink("Back to List", "Create", "Requisitions", null, new { @class = "btn btn-info" })
                </div>
            }

        </div>
        <div class="col-md-7">
            @{
                var data = ViewBag.FeedbackWithReplies;
            }
            @if (data != null)
            {
                <div class="row">
                    <div class="col-md-12">
                        <p class="text-center" style="font-size: 16px;">
                            <strong>Comment Box</strong>
                        </p>
                    </div>
                    <div class="col-md-12">
                        <table class="table table-bordered">
                            @Html.Hidden("returnUrl", this.Request.RawUrl)


                            @foreach (var comment in data)
                            {
                                <tr>

                                    <td style="width: 30%" class="bold">
                                        Mr. <b class="highlighted">@comment.Employee.FullName</b> Says That
                                        <br/>
                                        <br />
                                        <span class="label label-success">@comment.Employee.Designation.Title</span>

                                    </td>

                                    <td style="width: 60%" class="bold">
                                        <b class="highlighted">@comment.CommentText</b>
                                        <br /><br />
                                        <span class="label label-success">@comment.CreatedOn</span>


                                        @if (User.IsInRole("User"))
                                        {
                                            @Html.ActionLink("Update", "Edit", "Feedback", new { id = @comment.Id }, null)
                                        }

                                        @if (User.IsInRole("Administrator") || User.IsInRole("Controller"))
                                        {

                                        <td><a href="@Url.Action("Create", "Reply", new {commentId = @comment.Id})" class="btn btn-primary">Reply</a></td>
                                        @*<td><button class="btn btn-success pull-right btnReply" data-toggle="modal" data-target="#replyModal" value="@comment.Id">Reply</button></td>*@
                                            @*<td style="width: 10%">@Html.ActionLink("Reply","Reply","Requisitions", new { feedbackId = @comment.Id},new {@id="btnReply"})</td>*@


                                        }

                                    </tr>
                            }



                        </table>
                    </div>
                </div>

                <!--------------Comment Reply Section Start-->
                @*<div class="modal fade" id="replyModal">
                        <div class="modal-dialog">
                            <div class="modal-content">
                                <div class="modal-header table-info">
                                    <h3 class="modal-title">@Html.EditorFor(model => model.Requisition.RequisitionNumber, new {htmlAttributes = new {@class = "form-control", @readOnly = "readonly"}})</h3>
                                    <a href="#" class="close" data-dismiss="modal">&times;</a>
                                </div>
                                <div class="modal-body table-light">
                                    <div>
                                        <p id="feedbackId"></p>
                                    </div>
                                    @Html.Partial("Reply")

                                </div>
                                <div class="modal-footer">
                                    <a href="#" class="btn btn-warning" title="Close" data-dismiss="modal"> Close </a>
                                </div>
                            </div>
                        </div>
                    </div>*@


                <!-------------Comment Reply Section End-->
            }


        </div>
    </div>
    <br />
</div>




@section Scripts {

    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/chosenDD/chosen_DD.js"></script>
    @*<script>
        $(document).ready(function () {
            $(".btnReply").click(function () {
                var commentId = $(this);
                $("#commetnId").val = commentId;

                $("#feedbackId").val(commentId);
            });
        })*@


}