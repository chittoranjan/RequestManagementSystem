@model RMS.App.ViewModels.ReplyViewModel

@{
    ViewBag.Title = "Create";
}

        @{
            var data = ViewBag.Feedback;
            if (data != null)
            {

                <div class="row">
                    <div class="col-md-12">
                        <p class="text-center" style="font-size: 16px;">
                            <strong>Comment Box</strong>
                        </p>
                    </div>
                    <div class="col-md-12">
                        <table class="table table-bordered">

                            <tr>

                                <td style="width: 100%" class="bold">
                                    Mr. <b class="highlighted">
                                        <label>@data.Requisition.Employee.FullName</label>
                                    </b> Says That
                                    <br />
                                    <label>@data.CommentText</label>
                                    <br />
                                    <span class="label label-success">@data.CreatedOn</span>

                                </td>
                            </tr>

                        </table>
                    </div>
                </div>
            }
        }


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Reply</h4>
        <hr />


        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @Html.HiddenFor(model => model.FeedbackId)
        @Html.HiddenFor(model => model.EmployeeId)
        @Html.HiddenFor(model => model.EmployeeId)


        @*<div class="form-group">
                       @Html.LabelFor(model => model.Feedback.Requisition.Employee.FullName, htmlAttributes: new { @class = "control-label col-md-2" })
                       <div class="col-md-10">
                           @Html.EditorFor(model => model.Feedback.Requisition.Employee.FullName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                           @Html.ValidationMessageFor(model => model.Feedback.Requisition.Employee.FullName, "", new { @class = "text-danger" })
                       </div>
                   </div>

                   <div class="form-group">
                       @Html.LabelFor(model => model.Feedback.CreatedOn, htmlAttributes: new { @class = "control-label col-md-2" })
                       <div class="col-md-10">
                           @Html.EditorFor(model => model.Feedback.CreatedOn, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                           @Html.ValidationMessageFor(model => model.Feedback.CreatedOn, "", new { @class = "text-danger" })
                       </div>
                   </div>
            <div class="form-group hidden">
                       @Html.LabelFor(model => model.Feedback.CommentText, htmlAttributes: new { @class = "control-label col-md-2" })
                       <div class="col-md-10">
                           @Html.EditorFor(model => model.Feedback.CommentText, new { htmlAttributes = new { @class = "form-control",@readonly= "readonly" } })
                           @Html.ValidationMessageFor(model => model.Feedback.CommentText, "", new { @class = "text-danger" })
                       </div>
                   </div>*@



        <div class="form-group">
            @Html.LabelFor(model => model.ReplyText, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ReplyText, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ReplyText, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Reply" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Create","Feedback",new { requisitionId = Model.FeedbackId},null)
</div>
